{"version":3,"sources":["../src/service/CounterService/index.ts","../src/index.ts"],"sourcesContent":["import { BehaviorSubject, Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport class CounterService {\n  // 상태를 관리하는 BehaviorSubject\n  private count$: BehaviorSubject<number>\n\n  constructor(initialCount = 0) {\n    this.count$ = new BehaviorSubject<number>(initialCount)\n  }\n\n  // 1. 카운트 값 구독 (Observable)\n  public getCount(): Observable<number> {\n    return this.count$.asObservable()\n  }\n\n  // 2. 카운트를 증가시키는 메서드\n  public increment(): void {\n    this.count$.next(this.count$.value + 1)\n  }\n\n  // 3. 카운트를 감소시키는 메서드\n  public decrement(): void {\n    this.count$.next(this.count$.value - 1)\n  }\n\n  // 4. 특정 기준 이상인지 여부를 반환하는 메서드\n  public isCountAbove(threshold: number): Observable<boolean> {\n    return this.count$.pipe(map((count) => count >= threshold))\n  }\n}\n","import { CounterService } from './service'\n\nclass SDK {\n  public counterService: CounterService\n\n  constructor() {\n    this.counterService = new CounterService()\n  }\n}\n\nexport default SDK\n"],"mappings":"AAAA,OAAS,mBAAAA,MAAmC,OAC5C,OAAS,OAAAC,MAAW,iBAEb,IAAMC,EAAN,KAAqB,CAI1B,YAAYC,EAAe,EAAG,CAC5B,KAAK,OAAS,IAAIH,EAAwBG,CAAY,CACxD,CAGO,UAA+B,CACpC,OAAO,KAAK,OAAO,aAAa,CAClC,CAGO,WAAkB,CACvB,KAAK,OAAO,KAAK,KAAK,OAAO,MAAQ,CAAC,CACxC,CAGO,WAAkB,CACvB,KAAK,OAAO,KAAK,KAAK,OAAO,MAAQ,CAAC,CACxC,CAGO,aAAaC,EAAwC,CAC1D,OAAO,KAAK,OAAO,KAAKH,EAAKI,GAAUA,GAASD,CAAS,CAAC,CAC5D,CACF,EC5BA,IAAME,EAAN,KAAU,CAGR,aAAc,CACZ,KAAK,eAAiB,IAAIC,CAC5B,CACF,EAEOC,EAAQF","names":["BehaviorSubject","map","CounterService","initialCount","threshold","count","SDK","CounterService","src_default"]}